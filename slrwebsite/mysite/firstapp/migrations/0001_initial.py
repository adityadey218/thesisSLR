# Generated by Django 2.0.6 on 2021-04-26 11:43

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Altmetrics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('altmetric_jid', models.IntegerField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=500, null=True)),
                ('altmetric_id', models.IntegerField(blank=True, null=True)),
                ('journal', models.CharField(blank=True, max_length=500, null=True)),
                ('is_oa', models.BooleanField(null=True)),
                ('schema', models.CharField(blank=True, max_length=50, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('cited_by_posts_count', models.IntegerField(blank=True, null=True)),
                ('cited_by_msm_count', models.IntegerField(blank=True, null=True)),
                ('cited_by_policies_count', models.IntegerField(blank=True, null=True)),
                ('cited_by_tweeters_count', models.IntegerField(blank=True, null=True)),
                ('cited_by_fbwalls_count', models.IntegerField(blank=True, null=True)),
                ('cited_by_rh_count', models.IntegerField(blank=True, null=True)),
                ('cited_by_patents_count', models.IntegerField(blank=True, null=True)),
                ('cited_by_accounts_count', models.IntegerField(blank=True, null=True)),
                ('last_updated', models.IntegerField(blank=True, null=True)),
                ('added_on', models.IntegerField(blank=True, null=True)),
                ('published_on', models.IntegerField(blank=True, null=True)),
                ('readers_count', models.IntegerField(blank=True, null=True)),
                ('citeulike_reader', models.IntegerField(blank=True, null=True)),
                ('mendeley', models.IntegerField(blank=True, null=True)),
                ('connotea', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Authors',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('lit_date', models.IntegerField(blank=True, null=True)),
                ('citation_all_count', models.IntegerField(blank=True, null=True)),
                ('scopus_author_id', models.IntegerField(blank=True, null=True)),
                ('augender', models.CharField(blank=True, max_length=10, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('start_year', models.IntegerField(blank=True, null=True)),
                ('end_year', models.IntegerField(blank=True, null=True)),
                ('eid', models.IntegerField(blank=True, null=True)),
                ('document_count', models.IntegerField(blank=True, null=True)),
                ('cited_by_count', models.IntegerField(blank=True, null=True)),
                ('citation_count', models.IntegerField(blank=True, null=True)),
                ('name_initials', models.CharField(blank=True, max_length=50, null=True)),
                ('name_indexed', models.CharField(blank=True, max_length=50, null=True)),
                ('name_surname', models.CharField(blank=True, max_length=50, null=True)),
                ('name_given', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Authorsaltmetrics',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('citation_all_count', models.IntegerField(blank=True, null=True)),
                ('altmetrics_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstapp.Altmetrics')),
            ],
        ),
        migrations.CreateModel(
            name='Authorsmendely',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('scopus_author_id', models.IntegerField(blank=True, null=True)),
                ('start_year', models.IntegerField(blank=True, null=True)),
                ('end_year', models.IntegerField(blank=True, null=True)),
                ('eid', models.IntegerField(blank=True, null=True)),
                ('document_count', models.IntegerField(blank=True, null=True)),
                ('cited_by_count', models.IntegerField(blank=True, null=True)),
                ('citation_count', models.IntegerField(blank=True, null=True)),
                ('name_initials', models.CharField(blank=True, max_length=50, null=True)),
                ('name_indexed', models.CharField(blank=True, max_length=50, null=True)),
                ('name_surname', models.CharField(blank=True, max_length=50, null=True)),
                ('name_given', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BibFiles',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('fileName', models.CharField(max_length=500)),
                ('isProcessed', models.BooleanField(default=False)),
                ('insertDate', models.DateTimeField(default=datetime.datetime(2021, 4, 26, 11, 43, 51, 921166))),
            ],
        ),
        migrations.CreateModel(
            name='KeywordsClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('KeyWord', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='LiteratureCl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issn', models.CharField(max_length=50, null=True)),
                ('idl', models.CharField(max_length=50, null=True)),
                ('Abstract', models.CharField(max_length=10000, null=True)),
                ('Title', models.CharField(max_length=500, null=True)),
                ('Autherkeywords', models.CharField(max_length=5000, null=True)),
                ('Indexkeywords', models.CharField(max_length=5000, null=True)),
                ('Author', models.CharField(max_length=500, null=True)),
                ('AuthorsID', models.CharField(max_length=500, null=True)),
                ('Volume', models.IntegerField(null=True)),
                ('Issue', models.IntegerField(null=True)),
                ('Year', models.IntegerField(null=True)),
                ('Pagestart', models.IntegerField(null=True)),
                ('Pageend', models.IntegerField(null=True)),
                ('Pagecount', models.IntegerField(null=True)),
                ('Source', models.CharField(max_length=400, null=True)),
                ('ENTRYTYPE', models.CharField(max_length=500, null=True)),
                ('doi', models.CharField(max_length=5000, null=True)),
                ('url', models.CharField(max_length=500, null=True)),
                ('citation_count', models.IntegerField(default=0, null=True)),
                ('Affiliations', models.CharField(max_length=5000, null=True)),
                ('Authors_affiliations', models.CharField(max_length=5000, null=True)),
                ('Address', models.CharField(max_length=5000, null=True)),
                ('Publisher', models.CharField(max_length=5000, null=True)),
                ('Language', models.CharField(max_length=500, null=True)),
                ('AbbreviatedSource', models.CharField(max_length=200, null=True)),
                ('Document_Type', models.CharField(max_length=500, null=True)),
                ('Publication_Stage', models.CharField(max_length=100, null=True)),
                ('Access_Type', models.CharField(max_length=100, null=True)),
                ('EID', models.CharField(max_length=500, null=True)),
                ('author_publ_age', models.IntegerField(null=True)),
                ('author_age', models.IntegerField(null=True)),
                ('doc_id', models.IntegerField(null=True)),
                ('author_order', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mendeley',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reader_count', models.IntegerField(blank=True, null=True)),
                ('reader_count_by_academic_status', models.CharField(blank=True, max_length=5000, null=True)),
                ('StdPostgraduate_count', models.IntegerField(blank=True, null=True)),
                ('ProfessorAssociatProf_count', models.IntegerField(blank=True, null=True)),
                ('Researcher_count', models.IntegerField(blank=True, null=True)),
                ('StdMaster_count', models.IntegerField(blank=True, null=True)),
                ('StdPhd_count', models.IntegerField(blank=True, null=True)),
                ('Professor_count', models.IntegerField(blank=True, null=True)),
                ('StdBachelor_count', models.IntegerField(blank=True, null=True)),
                ('StdDoctoralstd_count', models.IntegerField(blank=True, null=True)),
                ('Lecturer_count', models.IntegerField(blank=True, null=True)),
                ('Other_count', models.IntegerField(blank=True, null=True)),
                ('Librarian_count', models.IntegerField(blank=True, null=True)),
                ('LecturerSeniorLec_count', models.IntegerField(blank=True, null=True)),
                ('Unspecified_count', models.IntegerField(blank=True, null=True)),
                ('reader_count_by_subject_area', models.CharField(blank=True, max_length=5000, null=True)),
                ('reader_count_by_subdiscipline', models.CharField(blank=True, max_length=5000, null=True)),
                ('reader_count_by_country', models.CharField(blank=True, max_length=5000, null=True)),
                ('group_count', models.IntegerField(blank=True, null=True)),
                ('has_pdf', models.CharField(max_length=500, null=True)),
                ('Literature_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstapp.LiteratureCl')),
            ],
        ),
        migrations.CreateModel(
            name='Plumx',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Citation_count', models.IntegerField(blank=True, null=True)),
                ('Citation_det', models.CharField(blank=True, max_length=500, null=True)),
                ('cited_by_count', models.IntegerField(blank=True, null=True)),
                ('cited_by_count_sources', models.CharField(blank=True, max_length=500, null=True)),
                ('Scopus_cit_count', models.IntegerField(blank=True, null=True)),
                ('Crossref', models.IntegerField(blank=True, null=True)),
                ('SSRN', models.IntegerField(blank=True, null=True)),
                ('PubMedCentralEurope', models.IntegerField(blank=True, null=True)),
                ('SciELO', models.IntegerField(blank=True, null=True)),
                ('Aci_cit', models.IntegerField(blank=True, null=True)),
                ('pubmed', models.IntegerField(blank=True, null=True)),
                ('patentfam_count', models.IntegerField(blank=True, null=True)),
                ('patentfam_count_sources', models.CharField(blank=True, max_length=500, null=True)),
                ('Patent_families', models.IntegerField(blank=True, null=True)),
                ('Clinical_citedby_count', models.IntegerField(blank=True, null=True)),
                ('NICE', models.IntegerField(blank=True, null=True)),
                ('PubMed_Guidelines_cot', models.IntegerField(blank=True, null=True)),
                ('DynaMed_Plus', models.IntegerField(blank=True, null=True)),
                ('Clinical_citedby_count_sources', models.CharField(blank=True, max_length=500, null=True)),
                ('policy_count', models.IntegerField(blank=True, null=True)),
                ('Policy_citation', models.IntegerField(blank=True, null=True)),
                ('Social_count', models.IntegerField(blank=True, null=True)),
                ('Social_det', models.CharField(blank=True, max_length=500, null=True)),
                ('Tweet_count', models.IntegerField(blank=True, null=True)),
                ('FB_count', models.IntegerField(blank=True, null=True)),
                ('Mention_count', models.IntegerField(blank=True, null=True)),
                ('Mention_det', models.CharField(blank=True, max_length=500, null=True)),
                ('News_count', models.IntegerField(blank=True, null=True)),
                ('Blog_count', models.IntegerField(blank=True, null=True)),
                ('reference_count', models.IntegerField(blank=True, null=True)),
                ('QA_site_mentioncount', models.IntegerField(blank=True, null=True)),
                ('link_count', models.IntegerField(blank=True, null=True)),
                ('Comment_count', models.IntegerField(blank=True, null=True)),
                ('Capture_count', models.IntegerField(blank=True, null=True)),
                ('Capture_det', models.CharField(blank=True, max_length=500, null=True)),
                ('Reader_count', models.IntegerField(blank=True, null=True)),
                ('export_save', models.IntegerField(blank=True, null=True)),
                ('download_ct', models.IntegerField(blank=True, null=True)),
                ('Book_mark_count', models.IntegerField(blank=True, null=True)),
                ('Usage_count', models.IntegerField(blank=True, null=True)),
                ('Usage_det', models.CharField(blank=True, max_length=500, null=True)),
                ('abstract_view', models.IntegerField(blank=True, null=True)),
                ('link_click_count', models.IntegerField(blank=True, null=True)),
                ('link_out', models.IntegerField(blank=True, null=True)),
                ('Fulltxt_viw', models.IntegerField(blank=True, null=True)),
                ('Literature_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstapp.LiteratureCl')),
            ],
        ),
        migrations.CreateModel(
            name='Quality',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('Lit_title', models.CharField(blank=True, max_length=500, null=True)),
                ('page', models.IntegerField(blank=True, null=True)),
                ('authors_all_count', models.FloatField(blank=True, null=True)),
                ('publication_type', models.FloatField(blank=True, null=True)),
                ('publisher', models.FloatField(blank=True, null=True)),
                ('abstract_structured', models.FloatField(blank=True, null=True)),
                ('cst', models.FloatField(blank=True, null=True)),
                ('csc', models.FloatField(blank=True, null=True)),
                ('sjr', models.FloatField(blank=True, null=True)),
                ('snip', models.FloatField(blank=True, null=True)),
                ('Citation_count', models.FloatField(blank=True, null=True)),
                ('Social_count', models.FloatField(blank=True, null=True)),
                ('Mention_count', models.FloatField(blank=True, null=True)),
                ('Capture_count', models.FloatField(blank=True, null=True)),
                ('Usage_count', models.FloatField(blank=True, null=True)),
                ('KW_hit_in_kw', models.FloatField(blank=True, null=True)),
                ('KW_hit_in_title', models.FloatField(blank=True, null=True)),
                ('KW_hit_in_abstract', models.FloatField(blank=True, null=True)),
                ('KW_hit_in_all', models.FloatField(blank=True, null=True)),
                ('literature_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstapp.LiteratureCl')),
            ],
        ),
        migrations.CreateModel(
            name='Readerbycountry',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('countrtname', models.CharField(max_length=100)),
                ('countrycount', models.IntegerField()),
                ('mendely_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstapp.Mendeley')),
            ],
        ),
        migrations.CreateModel(
            name='Readerbysubarea',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('subname', models.CharField(max_length=100)),
                ('subcount', models.IntegerField()),
                ('mendely_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstapp.Mendeley')),
            ],
        ),
        migrations.CreateModel(
            name='Readerbysubdiscipline',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('disname', models.CharField(max_length=100)),
                ('discount', models.IntegerField()),
                ('mendely_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstapp.Mendeley')),
            ],
        ),
        migrations.CreateModel(
            name='Recomclassification',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='RecommendetLit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=500)),
                ('Link', models.CharField(max_length=500)),
                ('Recomby', models.CharField(max_length=500, null=True)),
                ('RecomDate', models.CharField(max_length=500, null=True)),
                ('classified', models.CharField(max_length=500, null=True)),
                ('datePub', models.CharField(max_length=50, null=True)),
                ('RecomnB', models.CharField(max_length=100, null=True)),
                ('Author1', models.CharField(max_length=50, null=True)),
                ('second_recommendation', models.CharField(max_length=500, null=True)),
                ('citation_count', models.IntegerField(null=True)),
                ('affiliation', models.CharField(max_length=100, null=True)),
                ('affiliation_city', models.CharField(max_length=100, null=True)),
                ('affiliation_country', models.CharField(max_length=100, null=True)),
                ('issn', models.CharField(max_length=50)),
                ('idl', models.CharField(max_length=50, null=True)),
                ('Abstract', models.CharField(max_length=1000, null=True)),
                ('Autherkeywords', models.CharField(max_length=5000, null=True)),
                ('Indexkeywords', models.CharField(max_length=5000, null=True)),
                ('Author', models.CharField(max_length=500, null=True)),
                ('AuthorsID', models.CharField(max_length=500, null=True)),
                ('Volume', models.IntegerField(null=True)),
                ('Issue', models.IntegerField(null=True)),
                ('Year', models.IntegerField(null=True)),
                ('Pagestart', models.IntegerField(null=True)),
                ('Pageend', models.IntegerField(null=True)),
                ('Pagecount', models.IntegerField(null=True)),
                ('Source', models.CharField(max_length=5000)),
                ('ENTRYTYPE', models.CharField(max_length=500, null=True)),
                ('doi', models.CharField(max_length=100, null=True)),
                ('url', models.CharField(max_length=500, null=True)),
                ('Affiliations', models.CharField(max_length=5000, null=True)),
                ('Authors_affiliations', models.CharField(max_length=5000, null=True)),
                ('Address', models.CharField(max_length=500, null=True)),
                ('Publisher', models.CharField(max_length=500, null=True)),
                ('Language', models.CharField(max_length=500, null=True)),
                ('AbbreviatedSource', models.CharField(max_length=50, null=True)),
                ('Document_Type', models.CharField(max_length=500, null=True)),
                ('Publication_Stage', models.CharField(max_length=100, null=True)),
                ('Access_Type', models.CharField(max_length=100, null=True)),
                ('EID', models.CharField(max_length=500, null=True)),
                ('Article_type', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReverseIndexItem',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('count', models.IntegerField(default=0)),
                ('word', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=50)),
                ('literature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstapp.LiteratureCl')),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('journal', models.CharField(max_length=150)),
                ('cst', models.FloatField()),
                ('cstyear', models.IntegerField()),
                ('csc', models.FloatField()),
                ('cscyear', models.IntegerField()),
                ('sjr', models.FloatField()),
                ('sjryear', models.IntegerField()),
                ('snip', models.FloatField()),
                ('snipyear', models.IntegerField()),
            ],
        ),
        migrations.AddField(
            model_name='recomclassification',
            name='RecommendetLit_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstapp.RecommendetLit'),
        ),
        migrations.AddField(
            model_name='authorsmendely',
            name='mendeley_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstapp.Mendeley'),
        ),
        migrations.AddField(
            model_name='authors',
            name='literature_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstapp.LiteratureCl'),
        ),
        migrations.AddField(
            model_name='altmetrics',
            name='Literature_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firstapp.LiteratureCl'),
        ),
    ]
